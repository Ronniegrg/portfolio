{"version":3,"file":"Contact-CLv3i3sM.js","sources":["../../node_modules/emailjs-com/es/store/store.js","../../node_modules/emailjs-com/es/methods/init/init.js","../../node_modules/emailjs-com/es/utils/validateParams.js","../../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../../node_modules/emailjs-com/es/api/sendPost.js","../../node_modules/emailjs-com/es/methods/send/send.js","../../node_modules/emailjs-com/es/methods/sendForm/sendForm.js","../../node_modules/emailjs-com/es/index.js","../../src/utils/security.js","../../src/hooks/useRateLimit.jsx","../../src/components/HoneypotField.jsx","../../src/pages/Contact.jsx"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","/**\n * Security utilities for the portfolio application\n */\n\n/**\n * Input sanitization to prevent XSS attacks\n * @param {string} input - The input string to sanitize\n * @returns {string} - Sanitized string\n */\nexport const sanitizeInput = (input) => {\n  if (typeof input !== \"string\") return \"\";\n\n  return (\n    input\n      .trim()\n      // Remove script tags\n      .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, \"\")\n      // Remove event handlers\n      .replace(/on\\w+\\s*=\\s*\"[^\"]*\"/gi, \"\")\n      .replace(/on\\w+\\s*=\\s*'[^']*'/gi, \"\")\n      // Remove javascript: URLs\n      .replace(/javascript\\s*:/gi, \"\")\n      // Remove data: URLs with scripts\n      .replace(/data\\s*:\\s*text\\/html/gi, \"\")\n      // Remove iframe tags\n      .replace(/<iframe\\b[^<]*(?:(?!<\\/iframe>)<[^<]*)*<\\/iframe>/gi, \"\")\n      // Remove object and embed tags\n      .replace(/<(object|embed)\\b[^<]*(?:(?!<\\/\\1>)<[^<]*)*<\\/\\1>/gi, \"\")\n  );\n};\n\n/**\n * Email validation with security considerations\n * @param {string} email - Email to validate\n * @returns {boolean} - Whether email is valid\n */\nexport const isValidEmail = (email) => {\n  // Basic email validation\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n  if (!emailRegex.test(email)) return false;\n\n  // Additional security checks\n  if (email.length > 254) return false; // RFC 5321 limit\n  if (email.includes(\"..\")) return false; // Consecutive dots\n  if (email.startsWith(\".\") || email.endsWith(\".\")) return false;\n\n  return true;\n};\n\n/**\n * Check if text contains suspicious patterns\n * @param {string} text - Text to check\n * @returns {boolean} - Whether text contains suspicious patterns\n */\nexport const containsSuspiciousContent = (text) => {\n  const suspiciousPatterns = [\n    /<script/i,\n    /javascript:/i,\n    /vbscript:/i,\n    /data:\\s*text\\/html/i,\n    /onclick/i,\n    /onerror/i,\n    /onload/i,\n    /<iframe/i,\n    /<object/i,\n    /<embed/i,\n    /eval\\s*\\(/i,\n    /document\\.cookie/i,\n    /document\\.write/i,\n    /window\\.location/i,\n  ];\n\n  return suspiciousPatterns.some((pattern) => pattern.test(text));\n};\n\n/**\n * Rate limiting storage using localStorage\n */\nexport const RateLimitStorage = {\n  KEY: \"portfolio_rate_limit\",\n\n  get: () => {\n    try {\n      const data = localStorage.getItem(RateLimitStorage.KEY);\n      return data ? JSON.parse(data) : { attempts: [], blocked: false };\n    } catch {\n      return { attempts: [], blocked: false };\n    }\n  },\n\n  set: (data) => {\n    try {\n      localStorage.setItem(RateLimitStorage.KEY, JSON.stringify(data));\n    } catch {\n      // Ignore storage errors\n    }\n  },\n\n  clear: () => {\n    try {\n      localStorage.removeItem(RateLimitStorage.KEY);\n    } catch {\n      // Ignore storage errors\n    }\n  },\n};\n\n/**\n * Generate a simple hash for tracking purposes (not cryptographic)\n * @param {string} str - String to hash\n * @returns {string} - Simple hash\n */\nexport const simpleHash = (str) => {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash; // Convert to 32-bit integer\n  }\n  return Math.abs(hash).toString(36);\n};\n\n/**\n * CSRF token generation (simple implementation)\n * @returns {string} - CSRF token\n */\nexport const generateCSRFToken = () => {\n  const timestamp = Date.now().toString();\n  const random = Math.random().toString(36).substring(2);\n  return simpleHash(timestamp + random);\n};\n\n/**\n * Security headers for fetch requests\n */\nexport const getSecurityHeaders = () => {\n  return {\n    \"X-Requested-With\": \"XMLHttpRequest\",\n    \"Cache-Control\": \"no-cache\",\n    Pragma: \"no-cache\",\n  };\n};\n","import { useState, useCallback, useEffect } from \"react\";\nimport { RateLimitStorage } from \"../utils/security\";\n\n/**\n * Rate limiting hook to prevent spam submissions\n * @param {number} maxAttempts - Maximum number of attempts allowed\n * @param {number} windowMs - Time window in milliseconds\n * @returns {object} - Rate limit state and functions\n */\nconst useRateLimit = (maxAttempts = 3, windowMs = 15 * 60 * 1000) => {\n  // 15 minutes default\n  const [attempts, setAttempts] = useState([]);\n  const [isBlocked, setIsBlocked] = useState(false);\n  const [remainingTime, setRemainingTime] = useState(0);\n\n  // Load persisted data on mount\n  useEffect(() => {\n    const data = RateLimitStorage.get();\n    const now = Date.now();\n\n    // Filter out expired attempts\n    const validAttempts = data.attempts.filter(\n      (timestamp) => now - timestamp < windowMs\n    );\n\n    setAttempts(validAttempts);\n\n    // Check if still blocked\n    if (validAttempts.length >= maxAttempts) {\n      const oldestAttempt = Math.min(...validAttempts);\n      const timeUntilReset = windowMs - (now - oldestAttempt);\n\n      if (timeUntilReset > 0) {\n        setIsBlocked(true);\n        setRemainingTime(Math.ceil(timeUntilReset / 1000 / 60));\n\n        setTimeout(() => {\n          setIsBlocked(false);\n          setRemainingTime(0);\n        }, timeUntilReset);\n      }\n    }\n  }, [maxAttempts, windowMs]);\n\n  const checkRateLimit = useCallback(() => {\n    const now = Date.now();\n\n    // Remove attempts that are outside the time window\n    const recentAttempts = attempts.filter(\n      (timestamp) => now - timestamp < windowMs\n    );\n    setAttempts(recentAttempts);\n\n    // Check if we've exceeded the rate limit\n    if (recentAttempts.length >= maxAttempts) {\n      const oldestAttempt = Math.min(...recentAttempts);\n      const timeUntilReset = windowMs - (now - oldestAttempt);\n\n      setIsBlocked(true);\n      setRemainingTime(Math.ceil(timeUntilReset / 1000 / 60)); // Convert to minutes\n\n      // Persist the blocked state\n      RateLimitStorage.set({\n        attempts: recentAttempts,\n        blocked: true,\n        blockedUntil: now + timeUntilReset,\n      });\n\n      // Set timeout to unblock when window expires\n      setTimeout(() => {\n        setIsBlocked(false);\n        setRemainingTime(0);\n        RateLimitStorage.set({\n          attempts: [],\n          blocked: false,\n        });\n      }, timeUntilReset);\n\n      return false;\n    }\n\n    return true;\n  }, [attempts, maxAttempts, windowMs]);\n\n  const recordAttempt = useCallback(() => {\n    const now = Date.now();\n    const newAttempts = [...attempts, now];\n    setAttempts(newAttempts);\n\n    // Persist attempts\n    RateLimitStorage.set({\n      attempts: newAttempts,\n      blocked: isBlocked,\n    });\n  }, [attempts, isBlocked]);\n\n  const reset = useCallback(() => {\n    setAttempts([]);\n    setIsBlocked(false);\n    setRemainingTime(0);\n    RateLimitStorage.clear();\n  }, []);\n\n  return {\n    isBlocked,\n    remainingTime,\n    checkRateLimit,\n    recordAttempt,\n    reset,\n    attemptsCount: attempts.length,\n  };\n};\n\nexport default useRateLimit;\n","import { useState } from \"react\";\nimport styles from \"./HoneypotField.module.css\";\n\n/**\n * Honeypot field component for spam protection\n * This field should remain empty - if filled, it indicates a bot\n */\nconst HoneypotField = ({ onChange }) => {\n  const [value, setValue] = useState(\"\");\n\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n    setValue(newValue);\n\n    // Notify parent component of the honeypot field value\n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  return (\n    <div className={styles.honeypot}>\n      <label htmlFor=\"website\">Website (leave blank):</label>\n      <input\n        type=\"text\"\n        id=\"website\"\n        name=\"website\"\n        value={value}\n        onChange={handleChange}\n        tabIndex=\"-1\"\n        autoComplete=\"off\"\n        placeholder=\"\"\n        aria-hidden=\"true\"\n      />\n    </div>\n  );\n};\n\nexport default HoneypotField;\n","import { useState, useEffect, useRef } from \"react\";\nimport emailjs from \"emailjs-com\";\nimport {\n  FaGithub,\n  FaLinkedin,\n  FaEnvelope,\n  FaMapMarkerAlt,\n  FaPaperPlane,\n  FaCheckCircle,\n  FaExclamationCircle,\n  FaShieldAlt,\n} from \"react-icons/fa\";\nimport styles from \"./Contact.module.css\";\nimport { Helmet } from \"react-helmet-async\";\nimport useRateLimit from \"../hooks/useRateLimit\";\nimport HoneypotField from \"../components/HoneypotField\";\nimport SecurityInfo from \"../components/SecurityInfo\";\nimport {\n  sanitizeInput,\n  isValidEmail,\n  containsSuspiciousContent,\n} from \"../utils/security\";\n\nconst Contact = () => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    subject: \"\",\n    message: \"\",\n  });\n\n  const [formErrors, setFormErrors] = useState({});\n  const [isFocused, setIsFocused] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState(null);\n  const [honeypotValue, setHoneypotValue] = useState(\"\");\n  const formRef = useRef(null);\n  const contactRef = useRef(null);\n\n  // Rate limiting hook (3 attempts per 15 minutes)\n  const { isBlocked, remainingTime, checkRateLimit, recordAttempt } =\n    useRateLimit(3, 15 * 60 * 1000);\n\n  // Add animation when component mounts\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add(styles.visible);\n          }\n        });\n      },\n      { threshold: 0.1 }\n    );\n\n    if (contactRef.current) {\n      observer.observe(contactRef.current);\n    }\n\n    return () => observer.disconnect();\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n\n    // Clear error when user starts typing\n    if (formErrors[name]) {\n      setFormErrors((prev) => ({\n        ...prev,\n        [name]: \"\",\n      }));\n    }\n  };\n\n  const handleFocus = (name) => {\n    setIsFocused((prev) => ({\n      ...prev,\n      [name]: true,\n    }));\n  };\n\n  const handleBlur = (name) => {\n    setIsFocused((prev) => ({\n      ...prev,\n      [name]: false,\n    }));\n\n    // Validate on blur\n    validateField(name, formData[name]);\n  };\n\n  const handleHoneypotChange = (value) => {\n    setHoneypotValue(value);\n  };\n\n  const validateField = (name, value) => {\n    let error = \"\";\n\n    switch (name) {\n      case \"name\":\n        if (!value.trim()) {\n          error = \"Name is required\";\n        } else if (value.trim().length < 2) {\n          error = \"Name must be at least 2 characters\";\n        }\n        break;\n\n      case \"email\":\n        if (!value.trim()) {\n          error = \"Email is required\";\n        } else if (!isValidEmail(value)) {\n          error = \"Please enter a valid email address\";\n        }\n        break;\n\n      case \"subject\":\n        if (!value.trim()) {\n          error = \"Subject is required\";\n        } else if (value.trim().length < 3) {\n          error = \"Subject must be at least 3 characters\";\n        }\n        break;\n\n      case \"message\":\n        if (!value.trim()) {\n          error = \"Message is required\";\n        } else if (value.trim().length < 10) {\n          error = \"Message must be at least 10 characters\";\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    setFormErrors((prev) => ({\n      ...prev,\n      [name]: error,\n    }));\n\n    return !error;\n  };\n\n  const validateForm = () => {\n    const fields = [\"name\", \"email\", \"subject\", \"message\"];\n    let isValid = true;\n\n    fields.forEach((field) => {\n      if (!validateField(field, formData[field])) {\n        isValid = false;\n      }\n    });\n\n    return isValid;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Check honeypot field (spam protection)\n    if (honeypotValue.trim() !== \"\") {\n      console.warn(\"Honeypot field filled - potential spam attempt\");\n      setSubmitStatus({\n        success: false,\n        message: \"Security validation failed. Please try again.\",\n      });\n      return;\n    }\n\n    // Check rate limiting\n    if (isBlocked) {\n      setSubmitStatus({\n        success: false,\n        message: `Too many attempts. Please wait ${remainingTime} minute(s) before trying again.`,\n      });\n      return;\n    }\n\n    if (!checkRateLimit()) {\n      setSubmitStatus({\n        success: false,\n        message: `Rate limit exceeded. Please wait ${remainingTime} minute(s) before trying again.`,\n      });\n      return;\n    }\n\n    if (!validateForm()) {\n      // Scroll to the first error\n      const firstErrorField = document.querySelector(`.${styles.errorMsg}`);\n      if (firstErrorField) {\n        firstErrorField.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n      }\n      return;\n    }\n\n    setIsSubmitting(true);\n    setSubmitStatus(null);\n\n    try {\n      // Record the attempt for rate limiting\n      recordAttempt();\n\n      // Check if EmailJS is configured\n      if (\n        !import.meta.env.VITE_EMAILJS_PUBLIC_KEY ||\n        import.meta.env.VITE_EMAILJS_PUBLIC_KEY ===\n          \"your_emailjs_public_key_here\"\n      ) {\n        throw new Error(\n          \"EmailJS is not configured yet. Please set up your EmailJS credentials in the .env file to enable the contact form.\"\n        );\n      }\n\n      // Additional security: Input sanitization and validation\n      const sanitizedData = {\n        name: sanitizeInput(formData.name),\n        email: sanitizeInput(formData.email),\n        subject: sanitizeInput(formData.subject),\n        message: sanitizeInput(formData.message),\n      };\n\n      // Check for suspicious content\n      const allText = Object.values(sanitizedData).join(\" \");\n      if (containsSuspiciousContent(allText)) {\n        throw new Error(\n          \"Suspicious content detected. Please remove any scripts or HTML tags.\"\n        );\n      }\n\n      // Validate email again with enhanced validation\n      if (!isValidEmail(sanitizedData.email)) {\n        throw new Error(\"Invalid email address format.\");\n      }\n\n      // Send email using EmailJS\n      const templateParams = {\n        name: sanitizedData.name,\n        email: sanitizedData.email,\n        subject: sanitizedData.subject,\n        message: sanitizedData.message,\n        timestamp: new Date().toISOString(),\n        userAgent: navigator.userAgent.substring(0, 100), // Truncate for security\n      };\n\n      // Using your service ID and template ID\n      await emailjs.send(\n        \"service_2uujxo8\", // Service ID\n        \"template_j9bqd5m\", // Template ID\n        templateParams,\n        import.meta.env.VITE_EMAILJS_PUBLIC_KEY // Public Key\n      );\n\n      setSubmitStatus({\n        success: true,\n        message:\n          \"Your message has been sent successfully! I will get back to you soon.\",\n      });\n\n      // Reset form after successful submission\n      setFormData({\n        name: \"\",\n        email: \"\",\n        subject: \"\",\n        message: \"\",\n      });\n\n      // Scroll to success message\n      setTimeout(() => {\n        if (formRef.current) {\n          formRef.current.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\",\n          });\n        }\n      }, 100);\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n      setSubmitStatus({\n        success: false,\n        message: \"Something went wrong. Please try again later.\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const contactInfo = [\n    {\n      icon: <FaEnvelope />,\n      title: \"Email\",\n      content: \"rounigorgees@gmail.com\",\n      link: \"mailto:rounigorgees@gmail.com\",\n    },\n    {\n      icon: <FaLinkedin />,\n      title: \"LinkedIn\",\n      content: \"linkedin.com/in/rouni-gorgees\",\n      link: \"https://www.linkedin.com/in/rouni-gorgees-207b56167/\",\n    },\n    {\n      icon: <FaGithub />,\n      title: \"GitHub\",\n      content: \"github.com/Ronniegrg\",\n      link: \"https://github.com/Ronniegrg\",\n    },\n    {\n      icon: <FaMapMarkerAlt />,\n      title: \"Location\",\n      content: \"Ontario, Canada\",\n      link: null,\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>Contact | Rouni Gorgees</title>\n        <meta\n          name=\"description\"\n          content=\"Contact Rouni Gorgees, software developer, for collaboration, project inquiries, or professional networking.\"\n        />\n        <meta property=\"og:title\" content=\"Contact | Rouni Gorgees\" />\n        <meta\n          property=\"og:description\"\n          content=\"Contact Rouni Gorgees, software developer, for collaboration, project inquiries, or professional networking.\"\n        />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:url\" content=\"https://ronniegrg.github.io/contact\" />\n        <meta\n          property=\"og:image\"\n          content=\"https://ronniegrg.github.io/rg-logo.svg\"\n        />\n        <script type=\"application/ld+json\">{`\n          {\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"Person\",\n            \"name\": \"Rouni Gorgees\",\n            \"jobTitle\": \"Software Developer\",\n            \"url\": \"https://ronniegrg.github.io/contact\",\n            \"sameAs\": [\n              \"https://github.com/Ronniegrg\",\n              \"https://www.linkedin.com/in/rouni-gorgees-207b56167/\"\n            ],\n            \"address\": {\n              \"@type\": \"PostalAddress\",\n              \"addressLocality\": \"Ontario\",\n              \"addressCountry\": \"Canada\"\n            }\n          }\n        `}</script>\n      </Helmet>\n      <div className={styles.contact} ref={contactRef}>\n        <section className={`${styles.hero} ${styles.animatedSection}`}>\n          <div className={styles.container}>\n            <h1 className={styles.title}>Get In Touch</h1>\n            <p className={styles.intro}>\n              I'm always open to discussing new projects, creative ideas, or\n              opportunities to be part of your vision. Feel free to reach out!\n            </p>\n          </div>\n        </section>\n\n        <section className={styles.contactSection}>\n          <div className={styles.container}>\n            <div className={styles.grid}>\n              <div className={styles.formContainer}>\n                <h2 className={styles.sectionTitle}>\n                  <span className={styles.sectionIcon}>\n                    <FaPaperPlane />\n                  </span>\n                  Send me a message\n                </h2>\n\n                {submitStatus && (\n                  <div\n                    className={`${styles.submitMessage} ${\n                      submitStatus.success ? styles.success : styles.error\n                    }`}\n                  >\n                    <span className={styles.statusIcon}>\n                      {submitStatus.success ? (\n                        <FaCheckCircle />\n                      ) : (\n                        <FaExclamationCircle />\n                      )}\n                    </span>\n                    <p>{submitStatus.message}</p>\n                  </div>\n                )}\n\n                <form\n                  onSubmit={handleSubmit}\n                  className={styles.form}\n                  ref={formRef}\n                  noValidate\n                >\n                  {/* Honeypot field for spam protection */}\n                  <HoneypotField onChange={handleHoneypotChange} />\n\n                  {/* Rate limiting warning */}\n                  {isBlocked && (\n                    <div\n                      className={`${styles.submitMessage} ${styles.warning}`}\n                    >\n                      <span className={styles.statusIcon}>\n                        <FaShieldAlt />\n                      </span>\n                      <p>\n                        Rate limit exceeded. Please wait {remainingTime}{\" \"}\n                        minute(s) before trying again.\n                      </p>\n                    </div>\n                  )}\n\n                  <div className={styles.formRow}>\n                    <div\n                      className={`${styles.formGroup} ${\n                        isFocused.name ? styles.focused : \"\"\n                      } ${formErrors.name ? styles.hasError : \"\"}`}\n                    >\n                      <label htmlFor=\"name\">Name</label>\n                      <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        value={formData.name}\n                        onChange={handleChange}\n                        onFocus={() => handleFocus(\"name\")}\n                        onBlur={() => handleBlur(\"name\")}\n                        placeholder=\"Your name\"\n                      />\n                      {formErrors.name && (\n                        <span className={styles.errorMsg}>\n                          {formErrors.name}\n                        </span>\n                      )}\n                    </div>\n\n                    <div\n                      className={`${styles.formGroup} ${\n                        isFocused.email ? styles.focused : \"\"\n                      } ${formErrors.email ? styles.hasError : \"\"}`}\n                    >\n                      <label htmlFor=\"email\">Email</label>\n                      <input\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        value={formData.email}\n                        onChange={handleChange}\n                        onFocus={() => handleFocus(\"email\")}\n                        onBlur={() => handleBlur(\"email\")}\n                        placeholder=\"Your email address\"\n                      />\n                      {formErrors.email && (\n                        <span className={styles.errorMsg}>\n                          {formErrors.email}\n                        </span>\n                      )}\n                    </div>\n                  </div>\n\n                  <div\n                    className={`${styles.formGroup} ${\n                      isFocused.subject ? styles.focused : \"\"\n                    } ${formErrors.subject ? styles.hasError : \"\"}`}\n                  >\n                    <label htmlFor=\"subject\">Subject</label>\n                    <input\n                      type=\"text\"\n                      id=\"subject\"\n                      name=\"subject\"\n                      value={formData.subject}\n                      onChange={handleChange}\n                      onFocus={() => handleFocus(\"subject\")}\n                      onBlur={() => handleBlur(\"subject\")}\n                      placeholder=\"What is this regarding?\"\n                    />\n                    {formErrors.subject && (\n                      <span className={styles.errorMsg}>\n                        {formErrors.subject}\n                      </span>\n                    )}\n                  </div>\n\n                  <div\n                    className={`${styles.formGroup} ${\n                      isFocused.message ? styles.focused : \"\"\n                    } ${formErrors.message ? styles.hasError : \"\"}`}\n                  >\n                    <label htmlFor=\"message\">Message</label>\n                    <textarea\n                      id=\"message\"\n                      name=\"message\"\n                      value={formData.message}\n                      onChange={handleChange}\n                      onFocus={() => handleFocus(\"message\")}\n                      onBlur={() => handleBlur(\"message\")}\n                      rows=\"6\"\n                      placeholder=\"How can I help you?\"\n                    />\n                    {formErrors.message && (\n                      <span className={styles.errorMsg}>\n                        {formErrors.message}\n                      </span>\n                    )}\n                  </div>\n\n                  <button\n                    type=\"submit\"\n                    className={styles.submitButton}\n                    disabled={isSubmitting}\n                  >\n                    {isSubmitting ? (\n                      <>\n                        <span className={styles.spinnerIcon}></span>\n                        Sending...\n                      </>\n                    ) : (\n                      <>\n                        <FaPaperPlane /> Send Message\n                      </>\n                    )}\n                  </button>\n                </form>\n              </div>\n\n              <div className={styles.infoContainer}>\n                <h2 className={styles.sectionTitle}>\n                  <span className={styles.sectionIcon}>\n                    <FaEnvelope />\n                  </span>\n                  Contact Information\n                </h2>\n\n                <div className={styles.contactInfo}>\n                  {contactInfo.map((info, index) => (\n                    <div key={index} className={styles.infoItem}>\n                      <div className={styles.infoIcon}>{info.icon}</div>\n                      <div className={styles.infoContent}>\n                        <h3 className={styles.infoTitle}>{info.title}</h3>\n                        {info.link ? (\n                          <a\n                            href={info.link}\n                            target={\n                              info.link.startsWith(\"mailto\")\n                                ? \"_self\"\n                                : \"_blank\"\n                            }\n                            rel=\"noopener noreferrer\"\n                            className={styles.infoLink}\n                          >\n                            {info.content}\n                          </a>\n                        ) : (\n                          <p className={styles.infoText}>{info.content}</p>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                <div className={styles.availability}>\n                  <h3 className={styles.availabilityTitle}>\n                    Current Availability\n                  </h3>\n                  <div className={styles.availabilityStatus}>\n                    <span className={styles.statusDot}></span>\n                    <span>Available for new projects</span>\n                  </div>\n                  <p className={styles.availabilityText}>\n                    I'm currently available for freelance work and open to\n                    discussing new opportunities.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className={styles.mapSection}>\n          <div className={styles.container}>\n            <div className={styles.mapContainer}>\n              <h2 className={styles.mapTitle}>Find Me</h2>\n              <div className={styles.map}>\n                <div className={styles.mapPlaceholder}>\n                  <div className={styles.mapIcon}>\n                    <FaMapMarkerAlt />\n                  </div>\n                  <h3>Windsor, Ontario, Canada</h3>\n                  <p>View on External Map</p>\n                  <a\n                    href=\"https://www.openstreetmap.org/search?query=Windsor%2C%20Ontario%2C%20Canada\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className={styles.mapLink}\n                  >\n                    Open in OpenStreetMap\n                  </a>\n                  <a\n                    href=\"https://maps.google.com/maps?q=Windsor,ON,Canada\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className={styles.mapLink}\n                  >\n                    Open in Google Maps\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n};\n\nexport default Contact;\n"],"names":["store","init","userID","origin","validateParams","serviceID","templateID","EmailJSResponseStatus","httpResponse","sendPost","url","data","headers","resolve","reject","xhr","target","responseStatus","key","send","templatePrams","uID","findHTMLForm","form","currentForm","sendForm","formData","emailjs","sanitizeInput","input","isValidEmail","email","containsSuspiciousContent","text","pattern","RateLimitStorage","useRateLimit","maxAttempts","windowMs","attempts","setAttempts","useState","isBlocked","setIsBlocked","remainingTime","setRemainingTime","useEffect","now","validAttempts","timestamp","oldestAttempt","timeUntilReset","checkRateLimit","useCallback","recentAttempts","recordAttempt","newAttempts","reset","HoneypotField","onChange","value","setValue","handleChange","e","newValue","jsxs","styles","jsx","Contact","setFormData","formErrors","setFormErrors","isFocused","setIsFocused","isSubmitting","setIsSubmitting","submitStatus","setSubmitStatus","honeypotValue","setHoneypotValue","formRef","useRef","contactRef","observer","entries","entry","name","prev","handleFocus","handleBlur","validateField","handleHoneypotChange","error","validateForm","fields","isValid","field","handleSubmit","firstErrorField","sanitizedData","allText","templateParams","contactInfo","FaEnvelope","FaLinkedin","FaGithub","FaMapMarkerAlt","Fragment","Helmet","FaPaperPlane","FaCheckCircle","FaExclamationCircle","FaShieldAlt","info","index"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}